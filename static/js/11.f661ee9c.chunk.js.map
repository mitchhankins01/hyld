{"version":3,"sources":["pages/Home/Home.js"],"names":["iex","IEXCloudClient","axios","publishable","version","HomePage","defaultTickers","toastPositioning","vertical","horizontal","useState","error","setError","events","setEvents","enqueueSnackbar","useSnackbar","loading","setLoading","tickers","setTickers","moment","state","setState","React","useEffect","a","batchSymbols","dividends","res","Error","variant","anchorOrigin","String","renderDay","day","Object","keys","map","key","toISOString","slice","exDate","sorted","property","value","sort","b","length","title","style","padding","fontSize","display","justifyContent","width","color","label","icon","pageTitle","height","flex","alignItems","zIndex","position","top","right","bottom","left","background","size","date","onChangeMonth","onPickDate","console","log","classNames","onClick","e","className","isSame","format","renderHeader","onPrevMonth","onNextMonth","blue","startIcon","endIcon","ticker","eventsLength","marginRight","onDelete","deleteTicker","filter","disabled","JSON","stringify","answer","window","prompt","includes","toUpperCase"],"mappings":"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","file":"static/js/11.f661ee9c.chunk.js","sourcesContent":["import Page from 'material-ui-shell/lib/containers/Page'\r\nimport React from 'react'\r\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\r\nimport { useIntl } from 'react-intl'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { Calendar } from 'react-calendar-component';\r\nimport moment from 'moment';\r\nimport { useState } from 'react';\r\nimport './App.css';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport blue from '@material-ui/core/colors/blueGrey'\r\nimport { IEXCloudClient } from \"node-iex-cloud\";\r\nimport axios from 'axios';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport Button from '@material-ui/core/Button';\r\n// import Paper from '@material-ui/core/Paper';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useSnackbar } from 'notistack';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nconst iex = new IEXCloudClient(axios, {\r\n  publishable: \"pk_6260c74f116e4a78af6d9913806d951d\",\r\n  version: \"stable\"\r\n});\r\n\r\n\r\nconst HomePage = () => {\r\n  const defaultTickers = ['HFRO', 'NNN', 'AAPL'];\r\n  const toastPositioning = { vertical: 'top', horizontal: 'right' };\r\n\r\n  const [error, setError] = useState(null);\r\n  const [events, setEvents] = useState({});\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loading, setLoading] = useState(false);\r\n  const [tickers, setTickers] = useState(defaultTickers);\r\n  const [state, setState] = useState(moment('2020-11-15'));\r\n\r\n  React.useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        setLoading(true);\r\n        const res = await iex.batchSymbols(tickers).dividends('1m');\r\n\r\n        if (typeof res === 'string') {\r\n          throw new Error(res);\r\n        }\r\n        await setEvents(res);\r\n        setLoading(false);\r\n        enqueueSnackbar('Dividend Data Reloaded', {\r\n          variant: 'success',\r\n          anchorOrigin: toastPositioning,\r\n        });\r\n      } catch (error) {\r\n        setError(String(error));\r\n        setLoading(false);\r\n      }\r\n\r\n    })()\r\n  }, [tickers]);\r\n\r\n  React.useEffect(() => {\r\n    if (error) {\r\n      enqueueSnackbar(error, {\r\n        variant: 'error',\r\n        anchorOrigin: toastPositioning,\r\n      });\r\n    }\r\n  }, [error]);\r\n\r\n\r\n  const onClickAdd = () => {\r\n    if (tickers.length >= 4) {\r\n      return enqueueSnackbar('Shucks! This prototype is limited to four tickers', {\r\n        variant: 'error',\r\n        anchorOrigin: toastPositioning,\r\n      });\r\n    }\r\n\r\n    const answer = window.prompt('Ticker:');\r\n    if (answer && !tickers.includes(answer)) {\r\n      setTickers([...tickers, answer.toUpperCase()]);\r\n      return enqueueSnackbar('Got it, ticker added', {\r\n        variant: 'info',\r\n        anchorOrigin: toastPositioning,\r\n      });\r\n    }\r\n  }\r\n\r\n  const onClickReset = () => setTickers(defaultTickers)\r\n\r\n  const onDeleteTicker = deleteTicker =>\r\n    setTickers([...tickers.filter(ticker => ticker !== deleteTicker)]);\r\n\r\n  const renderDay = day => {\r\n    return Object.keys(events).map(key => {\r\n      if (events[key]['dividends'] && events[key]['dividends'][0] && day.toISOString().slice(0, 10) === events[key]['dividends'][0].exDate) {\r\n        const sorted = Object.keys(events[key]['dividends'][0]).map(property => {\r\n          return { property, value: events[key]['dividends'][0][property] };\r\n        }).sort((a, b) => (a.value.length > b.value.length) ? 1 : -1)\r\n\r\n        return (\r\n          <Tooltip\r\n            title={\r\n              <div style={{ padding: 5, fontSize: '1rem' }}>\r\n                {sorted.map(({ property, value }) => (\r\n                  <div key={property} style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <span>{property}</span>\r\n                    <span style={{ width: 20 }} />\r\n                    <span>{value}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            }\r\n          >\r\n            <Chip color='primary' style={{ display: 'flex', justifyContent: 'flex-start' }} key={events[key]['dividends'][0].exDate} label={key} icon={<AttachMoneyIcon fontSize='small' />} />\r\n          </Tooltip>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Page pageTitle='Dividend Tracker'>\r\n      <Scrollbar\r\n        style={{ height: '100%', width: '100%', display: 'flex', flex: 1 }}\r\n      >\r\n        {loading && (\r\n          <div style={{ justifyContent: 'center', alignItems: 'center', display: 'flex', zIndex: 99, position: 'absolute', top: 0, right: 0, bottom: 0, left: 0, background: 'rgba(0, 0, 0, 0.3)' }}>\r\n            <CircularProgress size={80} />\r\n          </div>\r\n        )}\r\n        <Calendar\r\n          date={state}\r\n          onChangeMonth={date => setState(date)}\r\n          onPickDate={date => console.log(date)}\r\n          renderDay={({ day, classNames, onPickDate }) => (\r\n            <div\r\n              key={day.format()}\r\n              onClick={e => onPickDate(day)}\r\n              className={`Calendar-grid-item ${day.isSame(moment(), 'day') && 'Calendar-grid-item--current'} ${classNames}`}\r\n            >\r\n              {day.format('D')}\r\n              {renderDay(day)}\r\n            </div>\r\n          )}\r\n          renderHeader={({ date, onPrevMonth, onNextMonth }) => (\r\n            <div className=\"Calendar-header\" style={{ background: blue[300] }}>\r\n              <Button style={{ color: 'white' }} color='secondary' onClick={onPrevMonth} startIcon={<ArrowBackIcon />}>\r\n                Previous\r\n              </Button>\r\n              <div className=\"Calendar-header-currentDate\">\r\n                {date.format('MMMM YYYY')}\r\n              </div>\r\n              <Button style={{ color: 'white' }} color='secondary' onClick={onNextMonth} endIcon={<ArrowForwardIcon />}>\r\n                Next\r\n              </Button>\r\n            </div>\r\n          )}\r\n        />\r\n\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: 20 }}>\r\n          <div>\r\n            {tickers.map(ticker => {\r\n              const eventsLength = events[ticker] && events[ticker]['dividends'] ? events[ticker]['dividends'].length : 0;\r\n              return (\r\n                <Chip style={{ marginRight: 5, padding: 5, background: eventsLength === 0 && 'rgba(255, 0, 0, 0.5)' }} key={ticker} label={`${ticker}: ${eventsLength}`} onDelete={() => onDeleteTicker(ticker)} />\r\n              )\r\n            })}\r\n          </div>\r\n          <div>\r\n            <Button disabled={JSON.stringify(tickers) === JSON.stringify(defaultTickers)} style={{ marginRight: 10 }} variant='outlined' color='secondary' onClick={onClickReset}>Reset Tickers</Button>\r\n            <Button variant='contained' color='primary' onClick={onClickAdd}>Add Ticker</Button>\r\n          </div>\r\n        </div>\r\n      </Scrollbar>\r\n    </Page>\r\n  )\r\n}\r\nexport default HomePage\r\n"],"sourceRoot":""}