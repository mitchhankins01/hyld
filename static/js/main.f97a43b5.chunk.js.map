{"version":3,"sources":["config/locales/index.js","config/routes.js","config/themes.js","config/menuItems.js","config/config.js","App.js","index.js"],"names":["locales","locale","messages","About","lazy","Home","HomeTable","routes","path","exact","redirect","component","themes","id","color","blueGrey","source","palette","primary","secondary","red","error","typography","fontColor","amber","pink","orange","getMenuItems","props","intl","updateLocale","menuContext","themeContext","a2HSContext","authData","auth","isDesktop","isAuthMenuOpen","useMiniMode","setMiniMode","themeID","setThemeID","setAuth","isAppInstallable","isAppInstalled","deferredPrompt","localeItems","allLocales","map","l","value","undefined","visible","primaryText","formatMessage","onClick","leftIcon","isAuthorised","themeItems","allThemes","t","style","isAuthenticated","primaryTogglesNestedList","nestedItems","divider","secondaryText","prompt","defaultMessage","config","defaultLocale","parseLanguages","onError","e","menu","theme","defaultThemeID","defaultType","pages","LandingPage","PageNotFound","merge","MUIConfig","_config","Demo","Component","render","document","getElementById"],"mappings":"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","file":"static/js/main.f97a43b5.chunk.js","sourcesContent":["const locales = [\r\n  {\r\n    locale: 'en',\r\n    messages: import('./en'),\r\n    //loadData: import(`@formatjs/intl-relativetimeformat/dist/locale-data/en`),\r\n  },\r\n  {\r\n    locale: 'ru',\r\n    messages: import('./ru'),\r\n    //loadData: import(`@formatjs/intl-relativetimeformat/dist/locale-data/ru`),\r\n  },\r\n  {\r\n    locale: 'de',\r\n    messages: import('./de'),\r\n    //loadData: import(`@formatjs/intl-relativetimeformat/dist/locale-data/de`),\r\n  },\r\n]\r\n\r\nexport default locales\r\n","/* eslint-disable react/jsx-key */\r\nimport React, { lazy } from 'react'\r\nimport AuthorizedRoute from 'base-shell/lib/components/AuthorizedRoute/AuthorizedRoute'\r\nimport UnauthorizedRoute from 'base-shell/lib/components/UnauthorizedRoute/UnauthorizedRoute'\r\nimport { Route } from 'react-router-dom'\r\n\r\nconst SignIn = lazy(() => import('../pages/SignIn/SignIn'))\r\nconst SignUp = lazy(() => import('../pages/SignUp/SignUp'))\r\nconst PasswordReset = lazy(() => import('../pages/PasswordReset/PasswordReset'))\r\nconst About = lazy(() => import('../pages/About'))\r\nconst Home = lazy(() => import('../pages/Home/Home'))\r\nconst HomeTable = lazy(() => import('../pages/Home/HomeTable'))\r\nconst DialogDemo = lazy(() => import('../pages/DialogDemo/DialogDemo'))\r\nconst ToastDemo = lazy(() => import('../pages/ToastDemo/ToastDemo'))\r\nconst FilterDemo = lazy(() => import('../pages/FilterDemo'))\r\nconst ListPageDemo = lazy(() => import('../pages/ListPageDemo'))\r\nconst TabsDemo = lazy(() => import('../pages/TabsDemo'))\r\n\r\nconst routes = [\r\n  // <UnauthorizedRoute path=\"/hyld/signin\" redirectTo=\"/\" exact component={SignIn} />,\r\n  // <UnauthorizedRoute path=\"/hyld/signup\" redirectTo=\"/\" exact component={SignUp} />,\r\n  // <UnauthorizedRoute\r\n  //   path=\"/hyld/password_reset\"\r\n  //   redirectTo=\"/\"\r\n  //   exact\r\n  //   component={PasswordReset}\r\n  // />,\r\n  <Route path=\"/hyld\" exact redirect='/hyld/home' />,\r\n  <Route path=\"/hyld/about\" exact component={About} />,\r\n  <Route path=\"/hyld/home\" exact component={Home} />,\r\n  <Route path=\"/hyld/hometable\" exact component={HomeTable} />,\r\n  // <AuthorizedRoute path=\"/dialog_demo\" exact component={DialogDemo} />,\r\n  // <AuthorizedRoute path=\"/toast_demo\" exact component={ToastDemo} />,\r\n  // <AuthorizedRoute path=\"/filter_demo\" exact component={FilterDemo} />,\r\n  // <AuthorizedRoute path=\"/list_page_demo\" exact component={ListPageDemo} />,\r\n  // <AuthorizedRoute path=\"/tabs_demo\" exact component={TabsDemo} />,\r\n]\r\n\r\nexport default routes\r\n","import red from '@material-ui/core/colors/red'\r\nimport pink from '@material-ui/core/colors/pink'\r\nimport green from '@material-ui/core/colors/indigo'\r\nimport blueGrey from '@material-ui/core/colors/blueGrey'\r\nimport amber from '@material-ui/core/colors/amber'\r\nimport orange from '@material-ui/core/colors/orange'\r\nimport blue from '@material-ui/core/colors/blue'\r\n\r\nconst themes = [\r\n  {\r\n    id: 'default',\r\n    color: blueGrey[500],\r\n    source: {\r\n      palette: {\r\n        primary: blueGrey,\r\n        secondary: red,\r\n        error: red,\r\n      },\r\n      typography: {\r\n        // In Chinese and Japanese the characters are usually larger,\r\n        // so a smaller fontsize may be appropriate.\r\n        fontColor: red,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'amber',\r\n    color: amber[500],\r\n    source: {\r\n      palette: {\r\n        primary: amber,\r\n        secondary: pink,\r\n        error: red,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'orange',\r\n    color: orange[500],\r\n    source: {\r\n      palette: {\r\n        primary: orange,\r\n        secondary: pink,\r\n        error: red,\r\n      },\r\n    },\r\n  },\r\n]\r\n\r\nexport default themes\r\n","import ChatBubble from '@material-ui/icons/ChatBubble'\r\nimport ChromeReaderMode from '@material-ui/icons/ChromeReaderMode'\r\nimport DaschboardIcon from '@material-ui/icons/Dashboard'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\nimport FilterList from '@material-ui/icons/FilterList'\r\nimport GetApp from '@material-ui/icons/GetApp'\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined'\r\nimport LanguageIcon from '@material-ui/icons/Language'\r\nimport LockIcon from '@material-ui/icons/Lock'\r\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen'\r\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer'\r\nimport React from 'react'\r\nimport SettingsIcon from '@material-ui/icons/SettingsApplications'\r\nimport StyleIcon from '@material-ui/icons/Style'\r\nimport Tab from '@material-ui/icons/Tab'\r\nimport ViewList from '@material-ui/icons/ViewList'\r\nimport Web from '@material-ui/icons/Web'\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport allLocales from './locales'\r\nimport allThemes from './themes'\r\n\r\nconst getMenuItems = (props) => {\r\n  const {\r\n    intl,\r\n    updateLocale,\r\n    locale,\r\n    menuContext,\r\n    themeContext,\r\n    a2HSContext,\r\n    auth: authData,\r\n  } = props\r\n  const { isDesktop, isAuthMenuOpen, useMiniMode, setMiniMode } = menuContext\r\n  const { themeID, setThemeID } = themeContext\r\n  const { auth, setAuth } = authData\r\n  const { isAppInstallable, isAppInstalled, deferredPrompt } = a2HSContext\r\n\r\n  const localeItems = allLocales.map((l) => {\r\n    return {\r\n      value: undefined,\r\n      visible: true,\r\n      primaryText: intl.formatMessage({ id: l.locale }),\r\n      onClick: () => {\r\n        updateLocale(l.locale)\r\n      },\r\n      leftIcon: <LanguageIcon />,\r\n    }\r\n  })\r\n\r\n  const isAuthorised = true;\r\n\r\n  const themeItems = allThemes.map((t) => {\r\n    return {\r\n      value: undefined,\r\n      visible: true,\r\n      primaryText: intl.formatMessage({ id: t.id }),\r\n      onClick: () => {\r\n        setThemeID(t.id)\r\n      },\r\n      leftIcon: <StyleIcon style={{ color: t.color }} />,\r\n    }\r\n  })\r\n\r\n  if (isAuthMenuOpen || !isAuthorised) {\r\n    return [\r\n      {\r\n        value: '/hyld/signin',\r\n        onClick: isAuthorised\r\n          ? () => {\r\n              setAuth({ isAuthenticated: false })\r\n            }\r\n          : () => {},\r\n        visible: true,\r\n        primaryText: isAuthorised\r\n          ? intl.formatMessage({ id: 'sign_out' })\r\n          : intl.formatMessage({ id: 'sign_in' }),\r\n        leftIcon: isAuthorised ? <ExitToAppIcon /> : <LockIcon />,\r\n      },\r\n    ]\r\n  }\r\n  return [\r\n    {\r\n      value: '/hyld/hometable',\r\n      visible: isAuthorised,\r\n      primaryText: 'Dividend Table',\r\n      leftIcon: <CalendarTodayIcon />,\r\n    },\r\n    {\r\n      value: '/hyld/home',\r\n      visible: isAuthorised,\r\n      primaryText: 'Dividend Calendar',\r\n      leftIcon: <CalendarTodayIcon />,\r\n    },\r\n    {\r\n      primaryText: 'Xyz',\r\n      primaryTogglesNestedList: true,\r\n      leftIcon: <Web />,\r\n      nestedItems: [\r\n        {\r\n          value: '/hyld/about',\r\n          visible: isAuthorised,\r\n          primaryText: 'Support',\r\n          leftIcon: <ChatBubble />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      value: '/hyld/about',\r\n      visible: true,\r\n      primaryText: intl.formatMessage({ id: 'about' }),\r\n      leftIcon: <InfoOutlined />,\r\n    },\r\n    { divider: true },\r\n    {\r\n      primaryText: intl.formatMessage({ id: 'settings' }),\r\n      primaryTogglesNestedList: true,\r\n      leftIcon: <SettingsIcon />,\r\n      nestedItems: [\r\n        {\r\n          primaryText: intl.formatMessage({ id: 'theme' }),\r\n          secondaryText: intl.formatMessage({ id: themeID }),\r\n          primaryTogglesNestedList: true,\r\n          leftIcon: <StyleIcon />,\r\n          nestedItems: themeItems,\r\n        },\r\n        {\r\n          primaryText: intl.formatMessage({ id: 'language' }),\r\n          secondaryText: intl.formatMessage({ id: locale }),\r\n          primaryTogglesNestedList: true,\r\n          leftIcon: <LanguageIcon />,\r\n          nestedItems: localeItems,\r\n        },\r\n        {\r\n          visible: isDesktop ? true : false,\r\n          onClick: () => {\r\n            setMiniMode(!useMiniMode)\r\n          },\r\n          primaryText: intl.formatMessage({\r\n            id: 'menu_mini_mode',\r\n          }),\r\n          leftIcon: useMiniMode ? <MenuOpenIcon /> : <ChromeReaderMode />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      value: null,\r\n      visible: isAppInstallable && !isAppInstalled,\r\n      onClick: () => {\r\n        deferredPrompt.prompt()\r\n      },\r\n      primaryText: intl.formatMessage({\r\n        id: 'install',\r\n        defaultMessage: 'Install',\r\n      }),\r\n      leftIcon: <GetApp />,\r\n    },\r\n  ]\r\n}\r\nexport default getMenuItems\r\n","import { lazy } from 'react'\r\nimport locales from './locales'\r\nimport routes from './routes'\r\nimport getMenuItems from './menuItems'\r\nimport themes from './themes'\r\nimport parseLanguages from 'base-shell/lib/utils/locale'\r\n\r\nconst config = {\r\n  routes,\r\n  locale: {\r\n    locales,\r\n    defaultLocale: parseLanguages(['en', 'de', 'ru'], 'en'),\r\n    onError: (e) => {\r\n      //console.warn(e)\r\n\r\n      return\r\n    },\r\n  },\r\n  menu: {\r\n    getMenuItems,\r\n  },\r\n  theme: {\r\n    themes,\r\n    defaultThemeID: 'default',\r\n    defaultType: 'light',\r\n  },\r\n  pages: {\r\n    LandingPage: lazy(() => import('../pages/LandingPage/LandingPage')),\r\n    PageNotFound: lazy(() => import('../pages/PageNotFound/PageNotFound')),\r\n  },\r\n}\r\n\r\nexport default config\r\n","import React, { Component } from 'react'\r\nimport App from 'base-shell/lib'\r\nimport MUIConfig from 'material-ui-shell/lib'\r\nimport merge from 'base-shell/lib/utils/config'\r\nimport _config from './config'\r\n\r\nconst config = merge(MUIConfig, _config)\r\n\r\nexport default class Demo extends Component {\r\n  render() {\r\n    return <App config={config} />\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport App from './App'\r\n\r\nrender(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}