[{"/Users/mitch/Projects/hyld/src/pages/Home/Home.js":"1","/Users/mitch/Projects/hyld/src/App.js":"2","/Users/mitch/Projects/hyld/src/pages/PageNotFound/PageNotFound.js":"3","/Users/mitch/Projects/hyld/src/pages/ToastDemo/ToastDemo.js":"4","/Users/mitch/Projects/hyld/src/pages/FilterDemo/index.js":"5","/Users/mitch/Projects/hyld/src/config/menuItems.js":"6","/Users/mitch/Projects/hyld/src/config/config.js":"7","/Users/mitch/Projects/hyld/src/config/routes.js":"8","/Users/mitch/Projects/hyld/src/config/themes.js":"9","/Users/mitch/Projects/hyld/src/config/index.js":"10","/Users/mitch/Projects/hyld/src/pages/LandingPage/LandingPage.js":"11","/Users/mitch/Projects/hyld/src/pages/PasswordReset/PasswordReset.js":"12","/Users/mitch/Projects/hyld/src/pages/About/index.js":"13","/Users/mitch/Projects/hyld/src/config/locales/ru.js":"14","/Users/mitch/Projects/hyld/src/config/locales/de.js":"15","/Users/mitch/Projects/hyld/src/pages/Home/HomeTable.js":"16","/Users/mitch/Projects/hyld/src/pages/ListPageDemo/index.js":"17"},{"size":8733,"mtime":1606937686757,"results":"18","hashOfConfig":"19"},{"size":355,"mtime":1606521326496,"results":"20","hashOfConfig":"19"},{"size":1615,"mtime":1606562852774,"results":"21","hashOfConfig":"19"},{"size":791,"mtime":1606521138579,"results":"22","hashOfConfig":"19"},{"size":4913,"mtime":1606521138565,"results":"23","hashOfConfig":"19"},{"size":4739,"mtime":1606666542395,"results":"24","hashOfConfig":"19"},{"size":744,"mtime":1606562592288,"results":"25","hashOfConfig":"19"},{"size":1985,"mtime":1606666508255,"results":"26","hashOfConfig":"19"},{"size":1132,"mtime":1606557287008,"results":"27","hashOfConfig":"19"},{"size":39,"mtime":1606521138552,"results":"28","hashOfConfig":"19"},{"size":507,"mtime":1606554731550,"results":"29","hashOfConfig":"19"},{"size":3170,"mtime":1606521138576,"results":"30","hashOfConfig":"19"},{"size":1092,"mtime":1606554871699,"results":"31","hashOfConfig":"19"},{"size":2113,"mtime":1606521138555,"results":"32","hashOfConfig":"19"},{"size":1480,"mtime":1606521138553,"results":"33","hashOfConfig":"19"},{"size":9658,"mtime":1607025980723,"results":"34","hashOfConfig":"19"},{"size":2239,"mtime":1606521138574,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1v0hjtt",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mitch/Projects/hyld/src/pages/Home/Home.js",["79","80","81"],"/Users/mitch/Projects/hyld/src/App.js",[],["82","83"],"/Users/mitch/Projects/hyld/src/pages/PageNotFound/PageNotFound.js",[],["84","85"],"/Users/mitch/Projects/hyld/src/pages/ToastDemo/ToastDemo.js",["86"],"import Button from '@material-ui/core/Button'\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nexport default function () {\r\n  const intl = useIntl()\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  return (\r\n    <Page\r\n      pageTitle={intl.formatMessage({\r\n        id: 'toast_demo',\r\n        defaultMessage: 'Toast demo',\r\n      })}\r\n    >\r\n      <br />\r\n      <Button\r\n        onClick={() => {\r\n          enqueueSnackbar('Test', {\r\n            variant: 'info',\r\n            anchorOrigin: {\r\n              vertical: 'top',\r\n              horizontal: 'center',\r\n            },\r\n          })\r\n        }}\r\n      >\r\n        OPEN Toast\r\n      </Button>\r\n    </Page>\r\n  )\r\n}\r\n","/Users/mitch/Projects/hyld/src/pages/FilterDemo/index.js",["87"],"import AutoSizer from 'react-virtualized-auto-sizer'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport FilterDrawer from 'material-ui-shell/lib/components/FilterDrawer'\r\nimport FilterList from '@material-ui/icons/FilterList'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Page from 'material-ui-shell/lib/containers/Page'\r\nimport React, { useEffect, useCallback } from 'react'\r\nimport SearchField from 'material-ui-shell/lib/components/SearchField'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport source from './data.json'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport { useFilter } from 'material-ui-shell/lib/providers/Filter'\r\nimport { useIntl } from 'react-intl'\r\n\r\nconst filterName = 'test_filter'\r\n\r\nconst CustomScrollbars = ({ onScroll, forwardedRef, style, children }) => {\r\n  const refSetter = useCallback((scrollbarsRef) => {\r\n    if (scrollbarsRef) {\r\n      forwardedRef(scrollbarsRef.view)\r\n    } else {\r\n      forwardedRef(null)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <Scrollbars\r\n      ref={refSetter}\r\n      style={{ ...style, overflow: 'hidden' }}\r\n      onScroll={onScroll}\r\n    >\r\n      {children}\r\n    </Scrollbars>\r\n  )\r\n}\r\n\r\nconst CustomScrollbarsVirtualList = React.forwardRef((props, ref) => (\r\n  <CustomScrollbars {...props} forwardedRef={ref} />\r\n))\r\n\r\nexport default function () {\r\n  const intl = useIntl()\r\n  const { openFilter, getList, getFilter, setSearch } = useFilter()\r\n\r\n  const { queries = [], search = {} } = getFilter(filterName)\r\n  const { value: searchvalue = '' } = search\r\n\r\n  const fields = [\r\n    {\r\n      name: 'name',\r\n      label: 'Name',\r\n    },\r\n    {\r\n      name: 'email',\r\n      label: 'E-Mail',\r\n    },\r\n    {\r\n      name: 'amount',\r\n      label: 'Amount',\r\n      type: 'number',\r\n    },\r\n    {\r\n      name: 'isActive',\r\n      label: 'Aktive',\r\n      type: 'bool',\r\n    },\r\n    {\r\n      name: 'registered',\r\n      label: 'Registered',\r\n      type: 'date',\r\n    },\r\n    {\r\n      name: 'registrationTime',\r\n      label: 'Registration time',\r\n      type: 'time',\r\n    },\r\n  ]\r\n\r\n  const list = getList(filterName, source, fields)\r\n\r\n  const listRef = React.createRef()\r\n\r\n  useEffect(() => {\r\n    if (listRef.current) {\r\n      listRef.current.scrollToItem(1500, 'center')\r\n    }\r\n  }, [listRef])\r\n\r\n  const Row = ({ index, style }) => {\r\n    const { name, amount = '', registered, email } = list[index]\r\n\r\n    return (\r\n      <div key={`${name}_${index}`} style={style}>\r\n        <ListItem alignItems=\"flex-start\">\r\n          <ListItemText\r\n            primary={`${name} ${index}`}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {email}\r\n                </Typography>\r\n                <br />\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {`${amount} ${registered}`}\r\n                </Typography>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n        <Divider />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page\r\n      pageTitle={intl.formatMessage(\r\n        {\r\n          id: 'filter_demo',\r\n          defaultMessage: 'Filter demo with {count} rows',\r\n        },\r\n        { count: list.length }\r\n      )}\r\n      contentStyle={{ overflow: 'hidden' }}\r\n      appBarContent={\r\n        <Toolbar disableGutters>\r\n          <SearchField\r\n            initialValue={searchvalue}\r\n            onChange={(v) => {\r\n              setSearch(filterName, v)\r\n            }}\r\n          />\r\n          <IconButton color=\"inherit\" onClick={() => openFilter(filterName)}>\r\n            <FilterList color={queries.length > 0 ? 'secondary' : undefined} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      }\r\n    >\r\n      <AutoSizer style={{ height: '100%', width: '100%' }}>\r\n        {({ height, width }) => {\r\n          return (\r\n            <List>\r\n              <FixedSizeList\r\n                className=\"List\"\r\n                ref={listRef}\r\n                height={height}\r\n                itemCount={list.length}\r\n                itemSize={91}\r\n                width={width}\r\n                outerElementType={CustomScrollbarsVirtualList}\r\n              >\r\n                {Row}\r\n              </FixedSizeList>\r\n            </List>\r\n          )\r\n        }}\r\n      </AutoSizer>\r\n      <FilterDrawer fields={fields} name={filterName} />\r\n    </Page>\r\n  )\r\n}\r\n","/Users/mitch/Projects/hyld/src/config/menuItems.js",["88","89","90","91","92","93"],"import ChatBubble from '@material-ui/icons/ChatBubble'\r\nimport ChromeReaderMode from '@material-ui/icons/ChromeReaderMode'\r\nimport DaschboardIcon from '@material-ui/icons/Dashboard'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\nimport FilterList from '@material-ui/icons/FilterList'\r\nimport GetApp from '@material-ui/icons/GetApp'\r\nimport InfoOutlined from '@material-ui/icons/InfoOutlined'\r\nimport LanguageIcon from '@material-ui/icons/Language'\r\nimport LockIcon from '@material-ui/icons/Lock'\r\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen'\r\nimport QuestionAnswer from '@material-ui/icons/QuestionAnswer'\r\nimport React from 'react'\r\nimport SettingsIcon from '@material-ui/icons/SettingsApplications'\r\nimport StyleIcon from '@material-ui/icons/Style'\r\nimport Tab from '@material-ui/icons/Tab'\r\nimport ViewList from '@material-ui/icons/ViewList'\r\nimport Web from '@material-ui/icons/Web'\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport allLocales from './locales'\r\nimport allThemes from './themes'\r\n\r\nconst getMenuItems = (props) => {\r\n  const {\r\n    intl,\r\n    updateLocale,\r\n    locale,\r\n    menuContext,\r\n    themeContext,\r\n    a2HSContext,\r\n    auth: authData,\r\n  } = props\r\n  const { isDesktop, isAuthMenuOpen, useMiniMode, setMiniMode } = menuContext\r\n  const { themeID, setThemeID } = themeContext\r\n  const { auth, setAuth } = authData\r\n  const { isAppInstallable, isAppInstalled, deferredPrompt } = a2HSContext\r\n\r\n  const localeItems = allLocales.map((l) => {\r\n    return {\r\n      value: undefined,\r\n      visible: true,\r\n      primaryText: intl.formatMessage({ id: l.locale }),\r\n      onClick: () => {\r\n        updateLocale(l.locale)\r\n      },\r\n      leftIcon: <LanguageIcon />,\r\n    }\r\n  })\r\n\r\n  const isAuthorised = true;\r\n\r\n  const themeItems = allThemes.map((t) => {\r\n    return {\r\n      value: undefined,\r\n      visible: true,\r\n      primaryText: intl.formatMessage({ id: t.id }),\r\n      onClick: () => {\r\n        setThemeID(t.id)\r\n      },\r\n      leftIcon: <StyleIcon style={{ color: t.color }} />,\r\n    }\r\n  })\r\n\r\n  if (isAuthMenuOpen || !isAuthorised) {\r\n    return [\r\n      {\r\n        value: '/hyld/signin',\r\n        onClick: isAuthorised\r\n          ? () => {\r\n              setAuth({ isAuthenticated: false })\r\n            }\r\n          : () => {},\r\n        visible: true,\r\n        primaryText: isAuthorised\r\n          ? intl.formatMessage({ id: 'sign_out' })\r\n          : intl.formatMessage({ id: 'sign_in' }),\r\n        leftIcon: isAuthorised ? <ExitToAppIcon /> : <LockIcon />,\r\n      },\r\n    ]\r\n  }\r\n  return [\r\n    {\r\n      value: '/hyld/hometable',\r\n      visible: isAuthorised,\r\n      primaryText: 'Dividend Table',\r\n      leftIcon: <CalendarTodayIcon />,\r\n    },\r\n    {\r\n      value: '/hyld/home',\r\n      visible: isAuthorised,\r\n      primaryText: 'Dividend Calendar',\r\n      leftIcon: <CalendarTodayIcon />,\r\n    },\r\n    {\r\n      primaryText: 'Xyz',\r\n      primaryTogglesNestedList: true,\r\n      leftIcon: <Web />,\r\n      nestedItems: [\r\n        {\r\n          value: '/hyld/about',\r\n          visible: isAuthorised,\r\n          primaryText: 'Support',\r\n          leftIcon: <ChatBubble />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      value: '/hyld/about',\r\n      visible: true,\r\n      primaryText: intl.formatMessage({ id: 'about' }),\r\n      leftIcon: <InfoOutlined />,\r\n    },\r\n    { divider: true },\r\n    {\r\n      primaryText: intl.formatMessage({ id: 'settings' }),\r\n      primaryTogglesNestedList: true,\r\n      leftIcon: <SettingsIcon />,\r\n      nestedItems: [\r\n        {\r\n          primaryText: intl.formatMessage({ id: 'theme' }),\r\n          secondaryText: intl.formatMessage({ id: themeID }),\r\n          primaryTogglesNestedList: true,\r\n          leftIcon: <StyleIcon />,\r\n          nestedItems: themeItems,\r\n        },\r\n        {\r\n          primaryText: intl.formatMessage({ id: 'language' }),\r\n          secondaryText: intl.formatMessage({ id: locale }),\r\n          primaryTogglesNestedList: true,\r\n          leftIcon: <LanguageIcon />,\r\n          nestedItems: localeItems,\r\n        },\r\n        {\r\n          visible: isDesktop ? true : false,\r\n          onClick: () => {\r\n            setMiniMode(!useMiniMode)\r\n          },\r\n          primaryText: intl.formatMessage({\r\n            id: 'menu_mini_mode',\r\n          }),\r\n          leftIcon: useMiniMode ? <MenuOpenIcon /> : <ChromeReaderMode />,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      value: null,\r\n      visible: isAppInstallable && !isAppInstalled,\r\n      onClick: () => {\r\n        deferredPrompt.prompt()\r\n      },\r\n      primaryText: intl.formatMessage({\r\n        id: 'install',\r\n        defaultMessage: 'Install',\r\n      }),\r\n      leftIcon: <GetApp />,\r\n    },\r\n  ]\r\n}\r\nexport default getMenuItems\r\n","/Users/mitch/Projects/hyld/src/config/config.js",[],"/Users/mitch/Projects/hyld/src/config/routes.js",["94","95","96","97","98","99","100","101","102","103"],"/* eslint-disable react/jsx-key */\r\nimport React, { lazy } from 'react'\r\nimport AuthorizedRoute from 'base-shell/lib/components/AuthorizedRoute/AuthorizedRoute'\r\nimport UnauthorizedRoute from 'base-shell/lib/components/UnauthorizedRoute/UnauthorizedRoute'\r\nimport { Route } from 'react-router-dom'\r\n\r\nconst SignIn = lazy(() => import('../pages/SignIn/SignIn'))\r\nconst SignUp = lazy(() => import('../pages/SignUp/SignUp'))\r\nconst PasswordReset = lazy(() => import('../pages/PasswordReset/PasswordReset'))\r\nconst About = lazy(() => import('../pages/About'))\r\nconst Home = lazy(() => import('../pages/Home/Home'))\r\nconst HomeTable = lazy(() => import('../pages/Home/HomeTable'))\r\nconst DialogDemo = lazy(() => import('../pages/DialogDemo/DialogDemo'))\r\nconst ToastDemo = lazy(() => import('../pages/ToastDemo/ToastDemo'))\r\nconst FilterDemo = lazy(() => import('../pages/FilterDemo'))\r\nconst ListPageDemo = lazy(() => import('../pages/ListPageDemo'))\r\nconst TabsDemo = lazy(() => import('../pages/TabsDemo'))\r\n\r\nconst routes = [\r\n  // <UnauthorizedRoute path=\"/hyld/signin\" redirectTo=\"/\" exact component={SignIn} />,\r\n  // <UnauthorizedRoute path=\"/hyld/signup\" redirectTo=\"/\" exact component={SignUp} />,\r\n  // <UnauthorizedRoute\r\n  //   path=\"/hyld/password_reset\"\r\n  //   redirectTo=\"/\"\r\n  //   exact\r\n  //   component={PasswordReset}\r\n  // />,\r\n  <Route path=\"/hyld\" exact redirect='/hyld/home' />,\r\n  <Route path=\"/hyld/about\" exact component={About} />,\r\n  <Route path=\"/hyld/home\" exact component={Home} />,\r\n  <Route path=\"/hyld/hometable\" exact component={HomeTable} />,\r\n  // <AuthorizedRoute path=\"/dialog_demo\" exact component={DialogDemo} />,\r\n  // <AuthorizedRoute path=\"/toast_demo\" exact component={ToastDemo} />,\r\n  // <AuthorizedRoute path=\"/filter_demo\" exact component={FilterDemo} />,\r\n  // <AuthorizedRoute path=\"/list_page_demo\" exact component={ListPageDemo} />,\r\n  // <AuthorizedRoute path=\"/tabs_demo\" exact component={TabsDemo} />,\r\n]\r\n\r\nexport default routes\r\n",["104","105"],"/Users/mitch/Projects/hyld/src/config/themes.js",["106","107"],"import red from '@material-ui/core/colors/red'\r\nimport pink from '@material-ui/core/colors/pink'\r\nimport green from '@material-ui/core/colors/indigo'\r\nimport blueGrey from '@material-ui/core/colors/blueGrey'\r\nimport amber from '@material-ui/core/colors/amber'\r\nimport orange from '@material-ui/core/colors/orange'\r\nimport blue from '@material-ui/core/colors/blue'\r\n\r\nconst themes = [\r\n  {\r\n    id: 'default',\r\n    color: blueGrey[500],\r\n    source: {\r\n      palette: {\r\n        primary: blueGrey,\r\n        secondary: red,\r\n        error: red,\r\n      },\r\n      typography: {\r\n        // In Chinese and Japanese the characters are usually larger,\r\n        // so a smaller fontsize may be appropriate.\r\n        fontColor: red,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'amber',\r\n    color: amber[500],\r\n    source: {\r\n      palette: {\r\n        primary: amber,\r\n        secondary: pink,\r\n        error: red,\r\n      },\r\n    },\r\n  },\r\n  {\r\n    id: 'orange',\r\n    color: orange[500],\r\n    source: {\r\n      palette: {\r\n        primary: orange,\r\n        secondary: pink,\r\n        error: red,\r\n      },\r\n    },\r\n  },\r\n]\r\n\r\nexport default themes\r\n","/Users/mitch/Projects/hyld/src/config/index.js",[],"/Users/mitch/Projects/hyld/src/pages/LandingPage/LandingPage.js",["108"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function () {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <h2>Landing Page</h2>\r\n\r\n      <div>\r\n        <Link to=\"/hyld/home\">Home</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","/Users/mitch/Projects/hyld/src/pages/PasswordReset/PasswordReset.js",[],"/Users/mitch/Projects/hyld/src/pages/About/index.js",["109"],"/Users/mitch/Projects/hyld/src/config/locales/ru.js",[],"/Users/mitch/Projects/hyld/src/config/locales/de.js",[],"/Users/mitch/Projects/hyld/src/pages/Home/HomeTable.js",["110","111","112","113"],"/Users/mitch/Projects/hyld/src/pages/ListPageDemo/index.js",["114"],{"ruleId":"115","severity":1,"message":"116","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":17},{"ruleId":"119","severity":1,"message":"120","line":72,"column":6,"nodeType":"121","endLine":72,"endColumn":15,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":81,"column":6,"nodeType":"121","endLine":81,"endColumn":13,"suggestions":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"125","replacedBy":"129"},{"ruleId":"127","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":7,"column":1,"nodeType":"133","endLine":34,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":47,"column":1,"nodeType":"133","endLine":175,"endColumn":2},{"ruleId":"115","severity":1,"message":"134","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":22},{"ruleId":"115","severity":1,"message":"135","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":18},{"ruleId":"115","severity":1,"message":"136","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":22},{"ruleId":"115","severity":1,"message":"137","line":15,"column":8,"nodeType":"117","messageId":"118","endLine":15,"endColumn":11},{"ruleId":"115","severity":1,"message":"138","line":16,"column":8,"nodeType":"117","messageId":"118","endLine":16,"endColumn":16},{"ruleId":"115","severity":1,"message":"139","line":34,"column":11,"nodeType":"117","messageId":"118","endLine":34,"endColumn":15},{"ruleId":"115","severity":1,"message":"140","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":23},{"ruleId":"115","severity":1,"message":"141","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":25},{"ruleId":"115","severity":1,"message":"142","line":7,"column":7,"nodeType":"117","messageId":"118","endLine":7,"endColumn":13},{"ruleId":"115","severity":1,"message":"143","line":8,"column":7,"nodeType":"117","messageId":"118","endLine":8,"endColumn":13},{"ruleId":"115","severity":1,"message":"144","line":9,"column":7,"nodeType":"117","messageId":"118","endLine":9,"endColumn":20},{"ruleId":"115","severity":1,"message":"145","line":13,"column":7,"nodeType":"117","messageId":"118","endLine":13,"endColumn":17},{"ruleId":"115","severity":1,"message":"146","line":14,"column":7,"nodeType":"117","messageId":"118","endLine":14,"endColumn":16},{"ruleId":"115","severity":1,"message":"147","line":15,"column":7,"nodeType":"117","messageId":"118","endLine":15,"endColumn":17},{"ruleId":"115","severity":1,"message":"148","line":16,"column":7,"nodeType":"117","messageId":"118","endLine":16,"endColumn":19},{"ruleId":"115","severity":1,"message":"149","line":17,"column":7,"nodeType":"117","messageId":"118","endLine":17,"endColumn":15},{"ruleId":"125","replacedBy":"150"},{"ruleId":"127","replacedBy":"151"},{"ruleId":"115","severity":1,"message":"152","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":13},{"ruleId":"115","severity":1,"message":"153","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":12},{"ruleId":"131","severity":1,"message":"132","line":4,"column":1,"nodeType":"133","endLine":26,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":8,"column":1,"nodeType":"133","endLine":41,"endColumn":2},{"ruleId":"115","severity":1,"message":"154","line":25,"column":10,"nodeType":"117","messageId":"118","endLine":25,"endColumn":18},{"ruleId":"115","severity":1,"message":"155","line":41,"column":26,"nodeType":"117","messageId":"118","endLine":41,"endColumn":43},{"ruleId":"119","severity":1,"message":"120","line":75,"column":6,"nodeType":"121","endLine":75,"endColumn":15,"suggestions":"156"},{"ruleId":"119","severity":1,"message":"123","line":84,"column":6,"nodeType":"121","endLine":84,"endColumn":13,"suggestions":"157"},{"ruleId":"131","severity":1,"message":"132","line":76,"column":1,"nodeType":"133","endLine":99,"endColumn":2},"no-unused-vars","'useIntl' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'enqueueSnackbar', 'iex', and 'toastPositioning'. Either include them or remove the dependency array.","ArrayExpression",["158"],"React Hook React.useEffect has missing dependencies: 'enqueueSnackbar' and 'toastPositioning'. Either include them or remove the dependency array.",["159"],"no-native-reassign",["160"],"no-negated-in-lhs",["161"],["160"],["161"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'DaschboardIcon' is defined but never used.","'FilterList' is defined but never used.","'QuestionAnswer' is defined but never used.","'Tab' is defined but never used.","'ViewList' is defined but never used.","'auth' is assigned a value but never used.","'AuthorizedRoute' is defined but never used.","'UnauthorizedRoute' is defined but never used.","'SignIn' is assigned a value but never used.","'SignUp' is assigned a value but never used.","'PasswordReset' is assigned a value but never used.","'DialogDemo' is assigned a value but never used.","'ToastDemo' is assigned a value but never used.","'FilterDemo' is assigned a value but never used.","'ListPageDemo' is assigned a value but never used.","'TabsDemo' is assigned a value but never used.",["160"],["161"],"'green' is defined but never used.","'blue' is defined but never used.","'DataGrid' is defined but never used.","'setAmountOfShares' is assigned a value but never used.",["162"],["163"],{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"168"},{"desc":"166","fix":"169"},"Update the dependencies array to be: [enqueueSnackbar, iex, tickers, toastPositioning]",{"range":"170","text":"171"},"Update the dependencies array to be: [enqueueSnackbar, error, toastPositioning]",{"range":"172","text":"173"},{"range":"174","text":"171"},{"range":"175","text":"173"},[2861,2870],"[enqueueSnackbar, iex, tickers, toastPositioning]",[3044,3051],"[enqueueSnackbar, error, toastPositioning]",[2697,2706],[2880,2887]]