{"version":3,"sources":["pages/Home/HomeTable.js"],"names":["HomePage","defaultTickers","toastPositioning","vertical","horizontal","iex","IEXCloudClient","axios","version","publishable","useState","data","setData","error","setError","enqueueSnackbar","useSnackbar","loading","setLoading","tickerInput","setTickerInput","tickers","setTickers","amountOfShares","formatNumber","format","prefix","truncate","padRight","React","useEffect","fetchData","ticker","a","symbol","dividends","dividendsArray","Error","previousData","forEach","variant","anchorOrigin","String","onClickAdd","length","includes","rightBorder","borderRight","pageTitle","style","height","width","display","flex","open","zIndex","size","justifyContent","alignItems","margin","map","marginRight","background","eventsLength","label","onDelete","deleteTicker","filter","component","onClick","disabled","JSON","stringify","onKeyDown","event","keyCode","preventDefault","onChange","target","value","toUpperCase","placeholder","orientation","Paper","align","console","log","byMonthAndTicker","dividend","monthIndex","exDate","split","key","Number","amount","total","Object","keys","scope","generateTableBody"],"mappings":"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","file":"static/js/14.eb6b978b.chunk.js","sourcesContent":["import Page from 'material-ui-shell/lib/containers/Page'\r\nimport React from 'react'\r\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\r\nimport { useState } from 'react';\r\nimport './App.css';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { IEXCloudClient } from 'node-iex-cloud';\r\nimport axios from 'axios';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useSnackbar } from 'notistack';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport format from 'format-number';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst HomePage = () => {\r\n  const defaultTickers = ['HFRO', 'NNN', 'AAPL', 'MS', 'MAC', 'AVB'];\r\n  const toastPositioning = { vertical: 'bottom', horizontal: 'left' };\r\n  const iex = new IEXCloudClient(axios, {\r\n    version: 'stable',\r\n    publishable: 'pk_2d68b4fe291941b99ab69c2f105fa629',\r\n  });\r\n\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [loading, setLoading] = useState(false);\r\n  const [tickerInput, setTickerInput] = useState('');\r\n  const [tickers, setTickers] = useState(defaultTickers);\r\n  const [amountOfShares, setAmountOfShares] = useState(1500);\r\n\r\n  const formatNumber = format({ prefix: '$', truncate: 2, padRight: 2 });\r\n\r\n  React.useEffect(() => {\r\n\r\n    const fetchData = async (ticker) => {\r\n      const dividendsArray = await iex.symbol(ticker).dividends('1y');\r\n      if (typeof dividendsArray === 'string') {\r\n        throw new Error(dividendsArray);\r\n      }\r\n\r\n      setData(previousData => [...previousData, dividendsArray]);\r\n    };\r\n\r\n    try {\r\n      setLoading(true);\r\n      setTickerInput('');\r\n\r\n      tickers.forEach(async ticker => {\r\n        fetchData(ticker);\r\n      });\r\n\r\n      setLoading(false);\r\n      enqueueSnackbar('Dividend Data Reloaded', {\r\n        variant: 'success',\r\n        anchorOrigin: toastPositioning,\r\n      });\r\n    } catch (error) {\r\n      setError(String(error));\r\n      setLoading(false);\r\n    }\r\n\r\n\r\n  }, [tickers]);\r\n\r\n  React.useEffect(() => {\r\n    if (error) {\r\n      enqueueSnackbar(error, {\r\n        variant: 'error',\r\n        anchorOrigin: toastPositioning,\r\n      });\r\n    }\r\n  }, [error]);\r\n\r\n\r\n  const onClickAdd = () => {\r\n    if (tickers.length >= 8) {\r\n      return enqueueSnackbar('Shucks! This prototype is limited to eight tickers', {\r\n        variant: 'error',\r\n        anchorOrigin: toastPositioning,\r\n      });\r\n    }\r\n\r\n    if (tickerInput && !tickers.includes(tickerInput)) {\r\n      setTickers([...tickers, tickerInput]);\r\n      return enqueueSnackbar(`Boom, ${tickerInput} Added`, {\r\n        variant: 'info',\r\n        anchorOrigin: toastPositioning,\r\n      });\r\n    }\r\n  }\r\n\r\n  const onClickReset = () => setTickers(defaultTickers)\r\n\r\n  const onChangeTickerInput = event => setTickerInput(event.target.value.toUpperCase());\r\n  const onKeyDownTickerInput = event => {\r\n    if (event.keyCode === 13) {\r\n      event.preventDefault();\r\n      onClickAdd();\r\n    }\r\n  }\r\n\r\n  const onDeleteTicker = deleteTicker =>\r\n    setTickers([...tickers.filter(ticker => ticker !== deleteTicker)]);\r\n\r\n  const generateTableBody = () => {\r\n    console.log(data);\r\n    const byMonthAndTicker = { '01': {}, '02': {}, '03': {}, '04': {}, '05': {}, '06': {}, '07': {}, '08': {}, '09': {}, '10': {}, '11': {}, '12': {} };\r\n\r\n    data.forEach(dividendsArray => {\r\n      dividendsArray.forEach(dividend => {\r\n        const monthIndex = dividend.exDate.split('-')[1];\r\n        byMonthAndTicker[monthIndex][dividend.key] = Number(dividend.amount) * amountOfShares;\r\n        byMonthAndTicker[monthIndex]['Total'] = Number(dividend.amount) * amountOfShares;\r\n      });\r\n\r\n    });\r\n\r\n    return tickers.map(ticker => {\r\n      let total = 0;\r\n      Object.keys(byMonthAndTicker).forEach(monthIndex => {\r\n        if (Number(byMonthAndTicker[monthIndex][ticker])) {\r\n          total += byMonthAndTicker[monthIndex][ticker]\r\n        }\r\n      })\r\n\r\n      const rightBorder = { borderRight: 'lightGray 1px solid', width: '7%' };\r\n      return (\r\n        <TableRow key={ticker}>\r\n          <TableCell style={{ ...rightBorder, width: '10%' }} component=\"th\" scope=\"row\">\r\n            {ticker}\r\n          </TableCell>\r\n          <TableCell style={rightBorder} align=\"right\">{formatNumber(byMonthAndTicker['01'][ticker])}</TableCell>\r\n          <TableCell style={rightBorder} align=\"right\">{formatNumber(byMonthAndTicker['02'][ticker])}</TableCell>\r\n          <TableCell style={rightBorder} align=\"right\">{formatNumber(byMonthAndTicker['03'][ticker])}</TableCell>\r\n          <TableCell style={rightBorder} align=\"right\">{formatNumber(byMonthAndTicker['04'][ticker])}</TableCell>\r\n          <TableCell style={rightBorder} align=\"right\">{formatNumber(byMonthAndTicker['05'][ticker])}</TableCell>\r\n          <TableCell style={rightBorder} align=\"right\">{formatNumber(byMonthAndTicker['06'][ticker])}</TableCell>\r\n          <TableCell style={rightBorder} align=\"right\">{formatNumber(byMonthAndTicker['07'][ticker])}</TableCell>\r\n          <TableCell style={rightBorder} align=\"right\">{formatNumber(byMonthAndTicker['08'][ticker])}</TableCell>\r\n          <TableCell style={rightBorder} align=\"right\">{formatNumber(byMonthAndTicker['09'][ticker])}</TableCell>\r\n          <TableCell style={rightBorder} align=\"right\">{formatNumber(byMonthAndTicker['10'][ticker])}</TableCell>\r\n          <TableCell style={rightBorder} align=\"right\">{formatNumber(byMonthAndTicker['11'][ticker])}</TableCell>\r\n          <TableCell style={rightBorder} align=\"right\">{formatNumber(byMonthAndTicker['12'][ticker])}</TableCell>\r\n          <TableCell style={{ ...rightBorder, width: '12%' }} align=\"right\">{formatNumber(total)}</TableCell>\r\n        </TableRow>\r\n      )\r\n    })\r\n  }\r\n\r\n  const rightBorder = { borderRight: 'lightGray 1px solid' };\r\n  return (\r\n    <Page pageTitle='HYLD - Dividend Tracker'>\r\n      <Scrollbar\r\n        style={{ height: '100%', width: '100%', display: 'flex', flex: 1 }}\r\n      >\r\n        <Backdrop open={loading} style={{ zIndex: 99 }}>\r\n          <CircularProgress size={80} style={{ zIndex: 999 }} />\r\n        </Backdrop>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', margin: 15 }}>\r\n          <div>\r\n            {tickers.map(ticker => {\r\n              // const eventsLength = events[ticker] && events[ticker]['dividends'] ? events[ticker]['dividends'].length : 0;\r\n              const eventsLength = 99;\r\n              return (\r\n                <Chip style={{ marginRight: 5, background: eventsLength === 0 && 'rgba(255, 0, 0, 0.5)' }} key={ticker} label={`${ticker}: ${eventsLength}`} onDelete={() => onDeleteTicker(ticker)} />\r\n              )\r\n            })}\r\n          </div>\r\n          <div>\r\n            <Paper component=\"form\">\r\n              <span style={{ margin: 10 }}>{amountOfShares} shares</span>\r\n              <IconButton onClick={onClickReset} disabled={JSON.stringify(tickers) === JSON.stringify(defaultTickers)} >\r\n                <RestoreIcon />\r\n              </IconButton>\r\n              <InputBase onKeyDown={onKeyDownTickerInput} onChange={onChangeTickerInput} value={tickerInput} placeholder='Add Ticker' />\r\n              <IconButton onClick={onClickAdd} >\r\n                <SearchIcon />\r\n              </IconButton>\r\n              <Divider orientation=\"vertical\" />\r\n\r\n            </Paper>\r\n          </div>\r\n        </div>\r\n\r\n        <Paper style={{ margin: '0 15px' }}>\r\n          <TableContainer component={Paper}>\r\n            <Table >\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell style={rightBorder}>Ticker</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>JAN</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>FEB</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>MAR</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>APR</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>MAY</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>JUN</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>JUL</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>AUG</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>SEP</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>OCT</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>NOV</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>DEC</TableCell>\r\n                  <TableCell style={rightBorder} align='right'>Annual Income</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {generateTableBody()}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n\r\n        </Paper>\r\n      </Scrollbar>\r\n    </Page>\r\n  )\r\n}\r\nexport default HomePage\r\n"],"sourceRoot":""}